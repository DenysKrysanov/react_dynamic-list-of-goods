{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","id","name","color","style","getAll","fetch","then","response","json","get5First","sort","firstGood","secondGood","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","handleClickLoadGoods","useCallback","goodsGetter","catch","error","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6OAOaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,6BACGA,EAAMC,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAElB,OACE,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGD,GAJID,W,OCTR,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAT,GAAK,OAAI,YAAIA,GAChBa,MAAK,SAACC,EAAWC,GAChB,OAAOD,EAAUV,KAAKY,cAAcD,EAAWX,SAEhDa,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZmB,QAAO,kBAAyB,QAAzB,EAAGd,aCfJe,EAAU,WACrB,MAA0BC,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcsB,EAAd,KAEMC,EAAuBC,uBAC3B,SAACC,GACCA,IACGhB,KAAKa,GACLI,OAAM,SAAAC,GAAK,uBAAcA,QAC3B,CAAC3B,IAGN,OACE,sBAAK4B,UAAU,kBAAf,UACE,uDAEA,wBACEC,KAAK,SACLD,UAAU,iCACV,UAAQ,aACRE,QAAS,kBAAMP,EAAqBhB,IAJtC,4BASA,wBACEsB,KAAK,SACLD,UAAU,sBACV,UAAQ,oBACRE,QAAS,kBAAMP,EAAqBX,IAJtC,gCASA,wBACEiB,KAAK,SACLD,UAAU,gCACV,UAAQ,aACRE,QAAS,kBAAMP,EAAqBL,IAJtC,4BASA,cAACrB,EAAD,CAAWG,MAAOA,QC9CxB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.14f8a9ed.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => {\n      const { id, name, color } = good;\n\n      return (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      );\n    })}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((firstGood, secondGood) => {\n        return firstGood.name.localeCompare(secondGood.name);\n      })\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(({ color }) => color === 'red'));\n};\n","import { FC, useCallback, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleClickLoadGoods = useCallback(\n    (goodsGetter: () => Promise<Good[]>) => {\n      goodsGetter()\n        .then(setGoods)\n        .catch(error => `Error: ${error}`);\n    }, [goods],\n  );\n\n  return (\n    <div className=\"App content box\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        className=\"button is-primary is-light m-1\"\n        data-cy=\"all-button\"\n        onClick={() => handleClickLoadGoods(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button is-light m-1\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleClickLoadGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button is-danger is-light m-1\"\n        data-cy=\"red-button\"\n        onClick={() => handleClickLoadGoods(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}